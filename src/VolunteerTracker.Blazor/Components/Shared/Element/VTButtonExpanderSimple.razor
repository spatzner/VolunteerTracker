@inherits VTElementBase

<VTButton Class="btn btn-outline-none"
          ContainerClass="d-inline"
          Tooltip="@Tooltip"
          @onclick="ToggleShow">
    @if (Show)
    {
        <i class="bi bi-caret-down-fill"></i>
    }
    else
    {
        <i class="bi bi-caret-right-fill"></i>
    }
</VTButton>


@code
{
    private bool _show;

    [Parameter]
    public VTButton.ActionType ButtonType { get; set; } = VTButton.ActionType.Button;

    [Parameter]
    public string Tooltip { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public bool Show
    {
        get => _show;
        set
        {
            if (value == Show)
                return;

            _show = value;

            ShowChanged.InvokeAsync(Show);
        }
    }

    [Parameter]
    public EventCallback<bool> ShowChanged { get; set; }

    protected override void OnInitialized() { }

    private void UpdateTooltip()
    {
        Tooltip = Show ? "Hide Details" : "Show Details";
    }

    private void ToggleShow(MouseEventArgs e)
    {
        Show = !Show;
        UpdateTooltip();
    }
}